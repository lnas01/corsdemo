buildscript {
    ext {}
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: "application"

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.springframework.boot"

apply plugin: "io.spring.dependency-management"


/**
 * https://docs.gradle.org/current/userguide/project_reports_plugin.html
 * taskReport
 * propertyReport
 * dependencyReport
 * htmlDependencyReport
 * --> projectReports
 */
apply plugin: "project-report"
check.dependsOn projectReport


// Utils:
apply from: "${rootDir}/config/utils.gradle"

// Code Coverage:
apply from: "${rootDir}/config/codecoverage.gradle"

// https://github.com/kt3k/coveralls-gradle-plugin
//    apply plugin: "com.github.kt3k.coveralls"

apply from: "${rootDir}/config/findbugs.gradle"

// PMD:
apply from: "${rootDir}/config/pmd.gradle"

// CPD:
//    apply from: "${rootDir}/config/cpd.gradle"

// CheckStyle:
//apply from: "${rootDir}/config/checkstyle.gradle"

// lintGradle:
//    apply from: "${rootDir}/config/lint.gradle"

// Build Scan:
//    apply from: "${rootDir}/config/buildscan.gradle"


repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }

    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/libs-milestone" }

    maven { url "https://repo.spring.io/libs-snapshot" }
    maven { url "https://repo.spring.io/snapshot" }
}

//-----------------------------------------------------------------------//
dependencyManagement {
    imports {
        mavenBom("io.spring.platform:platform-bom:${springIoVersion}")
    }
}

//-----------------------------------------------------------------------//
dependencies {

    // JAX-RS
//    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("org.springframework.boot:spring-boot-starter-web")


    // Security:
    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("org.springframework.security:spring-security-test")


    // Tools
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-actuator-docs")
    compile("org.springframework.boot:spring-boot-configuration-processor")

    runtime("org.springframework.boot:spring-boot-devtools")

    // Testing
    testCompile("org.springframework.boot:spring-boot-starter-test")

    // JSON Support
    compile ("com.fasterxml.jackson.core:jackson-core")
    compile ("com.fasterxml.jackson.core:jackson-databind")

}

//-----------------------------------------------------------------------//

/**
 * Gradle Wrapper can be run from root only
 * gradle wrapper
 */
//task wrapper(type: Wrapper) {
//    gradleVersion = "${gradleVersion}"
//}


// The End...
